package statefull.geofencing.faas.bench.marking;

import org.junit.jupiter.api.Test;
import org.locationtech.jts.geom.GeometryFactory;
import org.locationtech.jts.geom.LineString;
import org.locationtech.jts.geom.Polygon;
import org.locationtech.jts.geom.PrecisionModel;
import org.locationtech.jts.io.ParseException;
import org.locationtech.jts.io.WKTReader;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class IntersectionTest {
    public static final GeometryFactory GEOMETRY_FACTORY = new GeometryFactory(new PrecisionModel(9.007199254740992E15D), 4326);
    public static final WKTReader wktReader = new WKTReader(GEOMETRY_FACTORY);

    @Test
    public void ringIntersectsWithLineString() throws ParseException {
        var lineStringKwt = "LINESTRING (10.5627176 59.9124977, 10.5627176 59.9124977, 10.5627359 59.9125638, 10.5612541 59.9152155, 10.5609076 59.9157842, 10.556425 59.9165916, 10.5565903 59.9164894, 10.5565914 59.9164878, 10.5565944 59.9164851, 10.5565957 59.9164843, 10.556597 59.9164835, 10.5565984 59.9164832, 10.5566002 59.9164829, 10.5566032 59.9164824, 10.556605 59.9164825, 10.5566063 59.9164818, 10.5566069 59.9164808, 10.5566072 59.9164805, 10.55912 59.9169651, 10.5607111 59.9159382, 10.5626743 59.9126947, 10.5671891 59.9129426, 10.5735539 59.9146309, 10.57889 59.9150391, 10.5749204 59.9174112, 10.5789034 59.9197228, 10.5842065 59.9183008, 10.588965 59.9178502, 10.5940317 59.9193372, 10.5984057 59.920776, 10.6049036 59.9208179, 10.6106826 59.9242002, 10.6159559 59.926631, 10.6236604 59.9267083, 10.630186 59.9258854, 10.6363302 59.9269592, 10.6420214 59.9253791, 10.6460939 59.9244686, 10.6518663 59.9264702, 10.6579144 59.9284863, 10.6643998 59.929888, 10.6695899 59.9321258, 10.6749722 59.9344572, 10.6807461 59.936785, 10.6868729 59.9366577, 10.6932933 59.9350869, 10.6999229 59.9340195, 10.7056505 59.9319638, 10.707596 59.9316317)";
        var ringKwt = "POLYGON ((10.5754204 59.9174112, 10.575410792640202 59.91731365483899, 10.575382339766255 59.917219858283815, 10.57533613480615 59.91713341488349, 10.575273953390592 59.9170576466094, 10.575198185116509 59.91699546519384, 10.575111741716183 59.91694926023374, 10.575017945161008 59.916920807359794, 10.5749204 59.916911199999994, 10.574822854838992 59.916920807359794, 10.574729058283816 59.91694926023374, 10.57464261488349 59.91699546519384, 10.574566846609407 59.9170576466094, 10.57450466519385 59.91713341488349, 10.574458460233744 59.917219858283815, 10.574430007359798 59.91731365483899, 10.5744204 59.9174112, 10.574430007359798 59.917508745161, 10.574458460233744 59.91760254171618, 10.57450466519385 59.917688985116506, 10.574566846609407 59.91776475339059, 10.57464261488349 59.91782693480615, 10.574729058283816 59.91787313976625, 10.574822854838992 59.9179015926402, 10.5749204 59.9179112, 10.575017945161008 59.9179015926402, 10.575111741716183 59.91787313976625, 10.575198185116509 59.91782693480615, 10.575273953390592 59.91776475339059, 10.57533613480615 59.917688985116506, 10.575382339766255 59.91760254171618, 10.575410792640202 59.917508745161, 10.5754204 59.9174112))";
        var lineString = (LineString) wktReader.read(lineStringKwt);
        var ring = (Polygon) wktReader.read(ringKwt);
        assertTrue(ring.intersects(lineString));
    }
}
