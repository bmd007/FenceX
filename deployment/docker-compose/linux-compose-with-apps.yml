#doesn't support cpu and mem limits
version: "3.7"
services:

  consul:
    container_name: consul
    hostname: consul
    image: consul
    ports:
      - "8500:8500"
      - "8300:8300"
    volumes:
      - ./metrics/consul.json:/consul/config/consul.json

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    hostname: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_CREATE_TOPICS: >-
        mover-position-updates:5:3,
        fence_event_log:5:3,
        mover-global-state-store:5:3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092, OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://kafka:9092, OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
      #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    container_name: kafka2
    hostname: kafka2
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9092
      KAFKA_LISTENERS: INSIDE://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    container_name: kafka3
    hostname: kafka3
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:9092
      KAFKA_LISTENERS: INSIDE://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus:
    container_name: prometheus
    user: "0"
    depends_on:
      - consul
    image: prom/prometheus
    hostname: prometheus
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/prometheus_db:/var/lib/prometheus
      - ./metrics/prometheus_db:/prometheus
      - ./metrics/prometheus_db:/etc/prometheus
      - ./metrics/alert.rules:/etc/prometheus/alert.rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    user: "0"
    container_name: grafana
    image: grafana/grafana
    environment:
      SERVICE_IGNORE: ignore
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./metrics/grafana_db:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo
    ports:
      - "27017:27017"

  location-update-publisher:
    container_name: location-update-publisher
#    cpu_shares: 30
#    mem_limit: 700mb
    image: statefull-geofencing-faas-location-update-publisher:beta
    ports:
      - "9566:9566"
      - "9567:9567"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      KAFKA_TOPIC_CONFIG_EVENT: "5:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "5:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_CLOUD_CONSUL_HOST: consul


  location-update-publisher2:
    container_name: location-update-publisher2
#    cpu_shares: 30
#    mem_limit: 700mb
    image: statefull-geofencing-faas-location-update-publisher:beta
    ports:
      - "9516:9766"
      - "9517:9767"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      SERVER_PORT: 9766
      MANAGEMENT_SERVER_PORT: 9767
      KAFKA_TOPIC_CONFIG_EVENT: "3:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "3:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_CLOUD_CONSUL_HOST: consul

  location-update-publisher3:
    container_name: location-update-publisher3
#    cpu_shares: 30
#    mem_limit: 700mb
    image: statefull-geofencing-faas-location-update-publisher:beta
    ports:
      - "9526:9746"
      - "9527:9747"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      SERVER_PORT: 9746
      MANAGEMENT_SERVER_PORT: 9747
      KAFKA_TOPIC_CONFIG_EVENT: "3:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "3:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_CLOUD_CONSUL_HOST: consul

  location-aggregate:
    container_name: location-aggregate
    hostname: location-aggregate
#    cpu_shares: 50
#    mem_limit: 800mb
    image: statefull-geofencing-faas-location-aggregate:beta
    ports:
      - "9585:9585"
      - "9586:9586"
      - "8084:8084"
      - "9097:9097"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      KAFKA_TOPIC_CONFIG_EVENT: "5:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "5:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: location-aggregate
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
      SPRING_CLOUD_CONSUL_HOST: consul

  location-aggregate2:
    container_name: location-aggregate2
    hostname: location-aggregate2
#    cpu_shares: 50
#    mem_limit: 800mb
    image: statefull-geofencing-faas-location-aggregate:beta
    ports:
      - "7585:9585"
      - "7586:9586"
      - "6084:8084"
      - "7097:9097"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      KAFKA_TOPIC_CONFIG_EVENT: "5:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "5:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: location-aggregate2
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
      SPRING_CLOUD_CONSUL_HOST: consul

  realtime-fencing:
    container_name: realtime-fencing
    hostname: realtime-fencing
#    cpu_shares: 40
#    mem_limit: 500mb
    image: statefull-geofencing-faas-realtime-fencing:beta
    ports:
      - "7474:9535"
      - "7475:9536"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      KAFKA_TOPIC_CONFIG_EVENT: "5:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "5:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: realtime-fencing
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9535
      SPRING_CLOUD_CONSUL_HOST: consul

  realtime-fencing2:
    container_name: realtime-fencing2
    hostname: realtime-fencing2
#    cpu_shares: 40
#    mem_limit: 500mb
    image: statefull-geofencing-faas-realtime-fencing:beta
    ports:
      - "7476:9535"
      - "7477:9536"
    depends_on:
      - kafka
      - consul
      - prometheus
      - grafana
    environment:
      KAFKA_TOPIC_CONFIG_EVENT: "5:3"
      KAFKA_TOPIC_CONFIG_CHANGELOG: "5:3"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: realtime-fencing2
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9535
      SPRING_CLOUD_CONSUL_HOST: consul

  bench-marking:
    container_name: bench-marking
    hostname: bench-marking
#    cpu_shares: 30
#    mem_limit: 500mb
    image: statefull-geofencing-faas-bench-marking:beta
    ports:
      - "9511:9511"
      - "9512:9512"
    depends_on:
      - consul
      - prometheus
      - grafana
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul


