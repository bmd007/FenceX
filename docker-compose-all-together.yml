version: "3.7"

services:

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_CREATE_TOPICS: >-
        mover-position-updates:3:3,
        event_log:5:3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092, OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092, OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
      #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-manager:
    image: rafabsb/kafka-manager-docker:2.4
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true

  #TODO correct according to housekeeping
  statefull-geofencing-fass-runner1:
    hostname: statefull-geofencing-fass-runner1
    ports:
      - 8242:9585
      - 8243:9586
      - 9600:8084
      - 9500:9097
    build:
      context: ./runner
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: statefull-geofencing-fass-runner1
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585

  statefull-geofencing-fass-runner2:
    hostname: statefull-geofencing-fass-runner2
    ports:
      - 8244:9585
      - 8245:9586
      - 9601:8084
      - 9501:9097
    build:
      context: ./runner
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: statefull-geofencing-fass-runner2
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585

#  statefull-geofencing-fass-runner3:
#    hostname: statefull-geofencing-fass-runner3
#    ports:
#      - 8246:9585
#      - 8247:9586
#      - 9602:8084
#      - 9502:9097
#    build:
#      context: ./runner
#      dockerfile: Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: statefull-geofencing-fass-runner3
#      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
