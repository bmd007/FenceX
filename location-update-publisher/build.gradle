plugins {
    id 'org.springframework.boot' version '2.5.2'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id 'java'
    id 'idea'
    id "jacoco" //code coverage
}

jacoco {
    toolVersion = "0.8.6"
}

group = 'statefull.geofencing.faas'
ext.buildNumber = {
    def buildNumber = System.getenv('VERSION')
    if (buildNumber == null || buildNumber.allWhitespace) {
        buildNumber = 'beta'
    }
    return buildNumber
}

project.version = buildNumber()

sourceCompatibility = 16

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

ext {
    set('springCloudVersion', "2020.0.3")
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "org.springframework.cloud:spring-cloud-loadbalancer"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-config"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-discovery"
    //todo use function-web instead. then it will be easy to just copy paste for function-rabbitMq
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.locationtech.jts:jts-core:1.18.1'
    implementation "com.google.guava:guava:30.1.1-jre"

    implementation files('libs/statefull-geofencing-faas-common-beta.jar')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation 'com.github.javafaker:javafaker:1.0.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform {}
}
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}

bootBuildImage {
    imageName = "bmd007/location-update-publisher"
}
