plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id "jacoco" //code coverage
}

jacoco {
    toolVersion = "0.8.5"
}

group = 'wonderland'
ext.buildNumber = {
    def buildNumber = System.getenv('VERSION')
    if (buildNumber == null || buildNumber.allWhitespace) {
        buildNumber = '1.0.0-SNAPSHOT'
    }
    return buildNumber
}

project.version = buildNumber()

sourceCompatibility = 11

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
//    implementation 'org.springframework.cloud:spring-cloud-function-context'

    // spring basics
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools'

    // kafka
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }

    // h2
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.locationtech.jts:jts-core:1.16.1' // not needed when if h2gis

    implementation "com.google.guava:guava:28.2-jre"

    // to use h2gis
    //implementation 'com.h2database:h2:1.4.197' // h2gis does not support 1.4.199 yet.
    //implementation 'org.orbisgis:h2gis:1.5.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.awaitility:awaitility:3.1.6'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    compile group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform {}
}

wrapper {
    gradleVersion = "6.3"
    distributionType = Wrapper.DistributionType.ALL
}
